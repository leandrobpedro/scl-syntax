<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>awl</string>
		<string>scl</string>
	</array>
	<key>name</key>
	<string>Siemens Structured Control Language (SCL)</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>begin</key>
			<string>\'</string>
			<key>end</key>
			<string>\'</string>
			<key>name</key>
			<string>string.quoted.scl</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>\"</string>
			<key>end</key>
			<string>\"</string>
			<key>name</key>
			<string>entity.name.struct</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(\+|\-|\=|\:|\&lt;|\&gt;)</string>
			<key>name</key>
			<string>keyword.operator.scl</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>\(\*</string>
			<key>end</key>
			<string>\*\)</string>
			<key>name</key>
			<string>comment.block.documentation.scl</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\/\/.*$</string>
			<key>name</key>
			<string>comment.line.double-slash.scl</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(?i:(B(CD_TO_(DINT|INT)|LOCK_DB_TO_WORD|OOL_TO_(BYTE|D(WORD|INT)|INT|WORD)|YTE_TO_(BOOL|CHAR|DINT|DWORD|INT|WORD))|CHAR_TO_(BYTE|INT|STRING)|D(ATE_TO_DINT|INT_TO_(BCD|BCD_DWORD|BCD_WORD|BOOL|BYTE|DATE|DWORD|INT|REAL|STRING|TIME|TOD|WORD)|WORD_(BCD_TO_DINT|TO_(BOOL|BYTE|DINT|INT|REAL|WORD)))|INT_TO_(BCD|BCD_WORD|BOOL|BYTE|CHAR|DINT|DWORD|REAL|STRING|WORD)|R(EAL_TO_(DINT|DWORD|INT|STRING)|OUND)|STRING_TO_(CHAR|DINT|INT|REAL)|T(IME_TO_DINT|OD_TO_DINT|RUNC)|WORD_(BCD_TO_INT|TO_(BLOCK_DB|BOOL|BYTE|DINT|DWORD|INT))))\b</string>
			<key>name</key>
			<string>support.function.scl</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(?i:(A(RRAY|T)|B(EGIN|Y)|C(ASE|ONST|ONTINUE)|D(ATA_BLOCK|O)|E(LS(E|IF)|ND_(CASE|CONST|DATA_BLOCK|FOR|FUNCTION|FUNCTION_BLOCK|IF|LABEL|ORGANIZATION_BLOCK|REPEAT|STRUCT|TYPE|VAR|WHILE)|XIT)|F(OR|UNCTION|UNCTION_BLOCK)|GOTO|IF|LABEL|OF|ORGANIZATION_BLOCK|PROGRAM|RE(PEAT|TURN)|STRUCT|T(HEN|O|YPE)|UNTIL|V(AR|AR_(IN_OUT|INPUT|OUTPUT|TEMP))|WHILE))\b</string>
			<key>name</key>
			<string>keyword.control.scl</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(?i:(AND|DIV|MOD|NOT|OR|XOR))\b</string>
			<key>name</key>
			<string>keyword.operator.logical.scl</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(?i:(FALSE|NIL|TRUE))\b</string>
			<key>name</key>
			<string>constant.language.scl</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(16#[0-9a-f]+)\b</string>
			<key>name</key>
			<string>constant.numeric.hex.scl</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(?i:([0-9]*|[0-9]*\.[0-9]*)|((B|BOOL|BYTE|DW|DWORD|W|WORD)(#(0|2|16))(#([0-9a-f]+|\_)|)+))\b</string>
			<key>name</key>
			<string>constant.numeric.scl</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(?i:(T#(?!_)((\d+D)?(\_|)?(\d+H)?(\_|)?(\d+M)?(\_|)?(\d+S)?(\_|)?(\d+MS)?))|(TOD#(([0-1][0-9])|([2][0-3])):([0-5][0-9])(:[0-5][0-9](?:[.]\d{1,3})?)?))\b</string>
			<key>name</key>
			<string>constant.numeric.complex.scl</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(?i:ANY|B(LOCK_(DB|FB|FC|SDB|SFB|SFC)|OOL|YTE)|C(HAR|OUNTER)|D(ATE|ATE_AND_TIME|INT|T|WORD)|EN|ENO|INT|OK|POINTER|REAL|S(5TIME|TRING)|T(IME|IME_OF_DAY|IMER|OD)|VOID|WORD)\b</string>
			<key>name</key>
			<string>support.type.scl</string>
		</dict>
	</array>
	<key>scopeName</key>
	<string>source.scl</string>
	<key>uuid</key>
	<string>f9297ec3-288a-4cd7-82f8-070ea1082808</string>
</dict>
</plist>
